{"version":3,"sources":["components/Form.jsx","components/Item.jsx","components/Filter.jsx","components/Message.jsx","App.js","services/rest.jsx","index.js"],"names":["Form","onSubmit","onNameChange","onNumberChange","numberValue","nameValue","onChange","value","type","Item","name","number","deleteMe","id","onClick","e","Filter","filter","target","Message","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","display","setDisplay","setMessage","useEffect","axios","get","then","res","data","console","log","catch","err","handleDelete","window","confirm","delete","deletePerson","person","displayMessage","generateList","arr","map","key","setTimeout","style","height","marginBottom","preventDefault","length","obj","find","updatedPerson","put","post","postNewPerson","concat","str","filteredPersons","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0eaf658b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({\n  onSubmit,\n  onNameChange,\n  onNumberChange,\n  numberValue,\n  nameValue\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input onChange={onNameChange} value={nameValue} />\n      </div>\n      <div>\n        number: <input onChange={onNumberChange} value={numberValue} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Item = ({ name, number, deleteMe, id }) => {\n  const handleClick = e => {\n    deleteMe(id);\n  };\n  return (\n    <li>\n      {name} {number} <button onClick={handleClick}>delete</button>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\n\nconst Filter = ({ filter }) => {\n  const handleChange = e => {\n    filter(e.target.value);\n  };\n  return (\n    <div>\n      filter:\n      <input type=\"text\" onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Message = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport Item from \"./components/Item\";\nimport Filter from \"./components/Filter\";\nimport Message from \"./components/Message\";\n\nimport {\n  loadPersons,\n  postNewPerson,\n  deletePerson,\n  updateNumber\n} from \"./services/rest\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [display, setDisplay] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleControlName = e => setNewName(e.target.value);\n  const handleControlNumber = e => setNewNumber(e.target.value);\n\n  useEffect(() => {\n    loadPersons()\n      .then(res => {\n        const { persons } = res.data;\n        console.log(persons);\n        setPersons(persons);\n      })\n      .catch(err => console.log(\"error\", err));\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newName.length === 0 || newNumber.length === 0) {\n      displayMessage(\"incomplete\");\n      return;\n    }\n    // handle existing name case\n    const person = persons.find(person => person.name === newName);\n    if (\n      person &&\n      window.confirm(`${newName} is already in the phonebook. Update number?`)\n    ) {\n      const updatedPerson = { ...person, number: newNumber };\n      console.log(\"updated person obj: \", updatedPerson);\n      updateNumber(person.id, updatedPerson)\n        .then(res => {\n          console.log(\"in update numb\", res.data);\n          setPersons(\n            persons.map(person =>\n              person.id !== updatedPerson.id ? person : res.data\n            )\n          );\n          displayMessage(\"update\");\n          //reset form\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch(err => console.log(\"updated person catch: \", err));\n      // handle new name entry case\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      postNewPerson(newPerson).then(res => {\n        console.log(\"res.data in postNewPerson: \", res.data);\n        setPersons(persons.concat(res.data));\n        console.log(\"persons state in postNewPerson: \", persons);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const handleDelete = id => {\n    console.log(\"delete \", id);\n\n    if (window.confirm(\"Are you sure you want to do that?\")) {\n      deletePerson(id)\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n          setPersons(persons.filter(person => person.id !== id));\n          displayMessage(\"delete\");\n        })\n        .catch(err => {\n          console.log(err);\n          displayMessage(\"already deleted\");\n        });\n    }\n  };\n\n  const generateList = arr => {\n    return arr.map(person => (\n      <Item\n        key={person.id}\n        id={person.id}\n        name={person.name}\n        number={person.number}\n        deleteMe={handleDelete}\n      />\n    ));\n  };\n\n  const generateFiltered = str => {\n    const filteredPersons = persons.filter(person => {\n      return person.name.includes(str);\n    });\n    setDisplay(filteredPersons);\n  };\n\n  const displayMessage = type => {\n    switch (type) {\n      case \"update\":\n        setMessage(\"entry updated\");\n        break;\n      case \"delete\":\n        setMessage(\"entry deleted\");\n        break;\n      case \"already deleted\":\n        setMessage(\n          \"this entry has already been deleted. refresh page to update\"\n        );\n        break;\n      case \"incomplete\":\n        setMessage(\"You must enter both name and number\");\n        break;\n      default:\n        setMessage(\"\");\n    }\n\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1500);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div style={{ height: \"1rem\", marginBottom: \"0.5rem\" }} />\n      <Form\n        onSubmit={handleSubmit}\n        onNameChange={handleControlName}\n        onNumberChange={handleControlNumber}\n        nameValue={newName}\n        numberValue={newNumber}\n      />\n      <h3>Filter</h3>\n      <Filter filter={generateFiltered} />\n      <h2>Numbers</h2> {message.length > 1 ? <Message message={message} /> : \"\"}\n      <ul>{display ? generateList(display) : generateList(persons)}</ul>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\n\nconst baseUrl = \"/persons\";\nconst loadPersons = () => axios.get(baseUrl);\nconst postNewPerson = obj => axios.post(baseUrl, obj);\nconst deletePerson = id => axios.delete(`${baseUrl}/${id}`);\nconst updateNumber = (id, obj) => axios.put(`${baseUrl}/${id}`, obj);\n\nexport { loadPersons, postNewPerson, deletePerson, updateNumber };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}