{"ast":null,"code":"import _defineProperty from \"/home/newdevrising/dev/tutorials/fullstack-helsinki/part2/notes-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/newdevrising/dev/tutorials/fullstack-helsinki/part2/notes-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/newdevrising/dev/tutorials/fullstack-helsinki/part2/notes-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\"; // import axios from \"axios\";\n\nimport Note from \"./components/Note\";\nimport { initialGet, postNew, toggle, removeNote } from \"./services/api\";\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showAll = _useState4[0],\n        setShowAll = _useState4[1];\n\n  const importantNotes = notes.filter(note => note.important);\n\n  const _useState5 = useState(\"add note\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        note = _useState6[0],\n        setNote = _useState6[1];\n\n  useEffect(() => {\n    console.log(\"useEffect triggered this\");\n    initialGet().then(res => {\n      console.log(res);\n      setNotes(res.data);\n    }).catch(err => console.log(err.message));\n  }, []);\n\n  const handleTextInput = e => {\n    setNote(e.target.value);\n  };\n\n  const generateNoteId = () => {\n    // insures unique ID by adding one to highest existing\n    return Math.max(...notes.map(note => note.id)) + 1;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newNote = {\n      content: note,\n      important: Math.random() > 0.5,\n      date: new Date(),\n      id: generateNoteId()\n    };\n    postNew(newNote).then(res => console.log(res)); // add to state\n\n    setNotes(notes.concat(newNote));\n  };\n\n  const showImportant = () => {\n    // only important notes displayed showAll is false. toggled by button\n    setShowAll(!showAll);\n  };\n\n  const toggleImportant = id => {\n    // find note by id\n    const note = notes.find(note => note.id === +id); // create note with mod importance\n\n    console.log(\"og note\", note);\n\n    const modNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    toggle(id, modNote).then(res => {\n      console.log(\"res data\", res.data);\n      setNotes(notes.map(note => note.id === +id ? res.data : note));\n    }).catch(err => console.log(err));\n  };\n\n  const handleRemove = id => {\n    // delete from db\n    removeNote(id); // remove frmo state (map)\n  };\n\n  const generalRender = noteArr => noteArr.map(({\n    content,\n    id,\n    important\n  }) => React.createElement(Note, {\n    content: content,\n    important: important,\n    toggleImportant: toggleImportant,\n    id: id,\n    removeNote: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"button\", {\n    onClick: showImportant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, showAll ? \"Click to Show only important\" : \"Click to Show All\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleTextInput,\n    type: \"text\",\n    value: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, showAll ? generalRender(notes) : generalRender(importantNotes)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/newdevrising/dev/tutorials/fullstack-helsinki/part2/notes-app/src/App.js"],"names":["React","useState","useEffect","Note","initialGet","postNew","toggle","removeNote","App","props","notes","setNotes","showAll","setShowAll","importantNotes","filter","note","important","setNote","console","log","then","res","data","catch","err","message","handleTextInput","e","target","value","generateNoteId","Math","max","map","id","handleSubmit","preventDefault","newNote","content","random","date","Date","concat","showImportant","toggleImportant","find","modNote","handleRemove","generalRender","noteArr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,gBAAxD;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBACOR,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACZS,KADY;AAAA,QACLC,QADK;;AAAA,qBAEWV,QAAQ,CAAC,IAAD,CAFnB;AAAA;AAAA,QAEZW,OAFY;AAAA,QAEHC,UAFG;;AAInB,QAAMC,cAAc,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAvB;;AAJmB,qBAMKhB,QAAQ,CAAC,UAAD,CANb;AAAA;AAAA,QAMZe,IANY;AAAA,QAMNE,OANM;;AAQnBhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAhB,IAAAA,UAAU,GACPiB,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAX,MAAAA,QAAQ,CAACW,GAAG,CAACC,IAAL,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB,CALhB;AAMD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AAC3BV,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B;AACA,WAAOC,IAAI,CAACC,GAAL,CAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAUlB,IAAI,IAAIA,IAAI,CAACmB,EAAvB,CAAZ,IAA0C,CAAjD;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAGR,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACS,cAAF;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAEvB,IADK;AAEdC,MAAAA,SAAS,EAAEe,IAAI,CAACQ,MAAL,KAAgB,GAFb;AAGdC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAHQ;AAIdP,MAAAA,EAAE,EAAEJ,cAAc;AAJJ,KAAhB;AAOA1B,IAAAA,OAAO,CAACiC,OAAD,CAAP,CAAiBjB,IAAjB,CAAsBC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAA7B,EATwB,CAUxB;;AACAX,IAAAA,QAAQ,CAACD,KAAK,CAACiC,MAAN,CAAaL,OAAb,CAAD,CAAR;AACD,GAZD;;AAcA,QAAMM,aAAa,GAAG,MAAM;AAC1B;AACA/B,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAHD;;AAKA,QAAMiC,eAAe,GAAGV,EAAE,IAAI;AAC5B;AACA,UAAMnB,IAAI,GAAGN,KAAK,CAACoC,IAAN,CAAW9B,IAAI,IAAIA,IAAI,CAACmB,EAAL,KAAY,CAACA,EAAhC,CAAb,CAF4B,CAG5B;;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,IAAvB;;AACA,UAAM+B,OAAO,qBAAQ/B,IAAR;AAAcC,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA/B,MAAb;;AACAX,IAAAA,MAAM,CAAC6B,EAAD,EAAKY,OAAL,CAAN,CACG1B,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,GAAG,CAACC,IAA5B;AACAZ,MAAAA,QAAQ,CAACD,KAAK,CAACwB,GAAN,CAAUlB,IAAI,IAAKA,IAAI,CAACmB,EAAL,KAAY,CAACA,EAAb,GAAkBb,GAAG,CAACC,IAAtB,GAA6BP,IAAhD,CAAD,CAAR;AACD,KAJH,EAKGQ,KALH,CAKSC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CALhB;AAMD,GAZD;;AAcA,QAAMuB,YAAY,GAAGb,EAAE,IAAI;AACzB;AACA5B,IAAAA,UAAU,CAAC4B,EAAD,CAAV,CAFyB,CAGzB;AACD,GAJD;;AAMA,QAAMc,aAAa,GAAGC,OAAO,IAC3BA,OAAO,CAAChB,GAAR,CAAY,CAAC;AAAEK,IAAAA,OAAF;AAAWJ,IAAAA,EAAX;AAAelB,IAAAA;AAAf,GAAD,KACV,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEsB,OADX;AAEE,IAAA,SAAS,EAAEtB,SAFb;AAGE,IAAA,eAAe,EAAE4B,eAHnB;AAIE,IAAA,EAAE,EAAEV,EAJN;AAKE,IAAA,UAAU,EAAEa,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,OAAO,EAAEJ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,OAAO,GAAG,8BAAH,GAAoC,mBAD9C,CAFF,EAKE;AAAM,IAAA,QAAQ,EAAEwB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAET,eAAjB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,KAAK,EAAEX,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,GAAGqC,aAAa,CAACvC,KAAD,CAAhB,GAA0BuC,aAAa,CAACnC,cAAD,CAAnD,CATF,CADF;AAaD,CA1FD;;AA4FA,eAAeN,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport Note from \"./components/Note\";\nimport { initialGet, postNew, toggle, removeNote } from \"./services/api\";\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n\n  const importantNotes = notes.filter(note => note.important);\n\n  const [note, setNote] = useState(\"add note\");\n\n  useEffect(() => {\n    console.log(\"useEffect triggered this\");\n    initialGet()\n      .then(res => {\n        console.log(res);\n        setNotes(res.data);\n      })\n      .catch(err => console.log(err.message));\n  }, []);\n\n  const handleTextInput = e => {\n    setNote(e.target.value);\n  };\n\n  const generateNoteId = () => {\n    // insures unique ID by adding one to highest existing\n    return Math.max(...notes.map(note => note.id)) + 1;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newNote = {\n      content: note,\n      important: Math.random() > 0.5,\n      date: new Date(),\n      id: generateNoteId()\n    };\n\n    postNew(newNote).then(res => console.log(res));\n    // add to state\n    setNotes(notes.concat(newNote));\n  };\n\n  const showImportant = () => {\n    // only important notes displayed showAll is false. toggled by button\n    setShowAll(!showAll);\n  };\n\n  const toggleImportant = id => {\n    // find note by id\n    const note = notes.find(note => note.id === +id);\n    // create note with mod importance\n    console.log(\"og note\", note);\n    const modNote = { ...note, important: !note.important };\n    toggle(id, modNote)\n      .then(res => {\n        console.log(\"res data\", res.data);\n        setNotes(notes.map(note => (note.id === +id ? res.data : note)));\n      })\n      .catch(err => console.log(err));\n  };\n\n  const handleRemove = id => {\n    // delete from db\n    removeNote(id);\n    // remove frmo state (map)\n  };\n\n  const generalRender = noteArr =>\n    noteArr.map(({ content, id, important }) => (\n      <Note\n        content={content}\n        important={important}\n        toggleImportant={toggleImportant}\n        id={id}\n        removeNote={handleRemove}\n      />\n    ));\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      <button onClick={showImportant}>\n        {showAll ? \"Click to Show only important\" : \"Click to Show All\"}\n      </button>\n      <form onSubmit={handleSubmit}>\n        <input onChange={handleTextInput} type=\"text\" value={note} />\n        <input type=\"submit\" />\n      </form>\n      <ul>{showAll ? generalRender(notes) : generalRender(importantNotes)}</ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}